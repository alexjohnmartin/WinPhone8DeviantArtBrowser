// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   	ViewModel.tt
// Version:		2.0
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls = WPAppStudio.Controls;
using Entities = WPAppStudio.Entities;
using EntitiesBase = WPAppStudio.Entities.Base;
using IServices = WPAppStudio.Services.Interfaces;
using IViewModels = WPAppStudio.ViewModel.Interfaces;
using Localization = WPAppStudio.Localization;
using Repositories = WPAppStudio.Repositories;
using Services = WPAppStudio.Services;
using ViewModelsBase = WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Mostpopular_News ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class Mostpopular_NewsViewModel : ViewModelsBase.VMBase, IViewModels.IMostpopular_NewsViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.IMostpopular_MainFeedRss _mostpopular_MainFeedRss;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Mostpopular_NewsViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="mostpopular_MainFeedRss">The Mostpopular_ Main Feed Rss.</param>
        public Mostpopular_NewsViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ILockScreenService lockScreenService, Repositories.IMostpopular_MainFeedRss mostpopular_MainFeedRss)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_lockScreenService = lockScreenService;
			_mostpopular_MainFeedRss = mostpopular_MainFeedRss;
        }
		
	
		private ObservableCollection<EntitiesBase.RssSearchResult> _mostpopular_NewsListControlCollection;

        /// <summary>
        /// Mostpopular_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.RssSearchResult> Mostpopular_NewsListControlCollection
        {
            get
            {
				
                if(_mostpopular_NewsListControlCollection == null)
					GetMostpopular_NewsListControlCollectionData();
				return _mostpopular_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _mostpopular_NewsListControlCollection, value);
            }
        }
	
		private EntitiesBase.RssSearchResult _selectedMostpopular_NewsListControlCollection;

        /// <summary>
        /// SelectedMostpopular_NewsListControlCollection property.
        /// </summary>		
        public EntitiesBase.RssSearchResult SelectedMostpopular_NewsListControlCollection
        {
            get
            {
				return _selectedMostpopular_NewsListControlCollection;
            }
            set
            {
                _selectedMostpopular_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IMostpopular_DetailViewModel>(_selectedMostpopular_NewsListControlCollection);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshMostpopular_NewsListControlCollectionCommand command.
        /// </summary>
        public async void RefreshMostpopular_NewsListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingMostpopular_NewsListControlCollection = true;
				var items = await  _mostpopular_MainFeedRss.Refresh();
				Mostpopular_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				Mostpopular_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingMostpopular_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingMostpopular_NewsListControlCollection;
		
        public bool LoadingMostpopular_NewsListControlCollection
        {
            get { return _loadingMostpopular_NewsListControlCollection; }
            set { SetProperty(ref _loadingMostpopular_NewsListControlCollection, value); }
        }

        private ICommand _refreshMostpopular_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshMostpopular_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshMostpopular_NewsListControlCollectionCommand
        {
            get { return _refreshMostpopular_NewsListControlCollectionCommand = _refreshMostpopular_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshMostpopular_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetMostpopular_NewsListControlCollectionCommand command.
        /// </summary>
        public  void GetMostpopular_NewsListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetMostpopular_NewsListControlCollectionData(pageNumber);
        }
		

        private ICommand _getMostpopular_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the GetMostpopular_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand GetMostpopular_NewsListControlCollectionCommand
        {
            get { return _getMostpopular_NewsListControlCollectionCommand = _getMostpopular_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetMostpopular_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
				_lockScreenService.SetLockScreen("DoWapp-Splashscreen-WXGA-black.png");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }

        private async void GetMostpopular_NewsListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingMostpopular_NewsListControlCollection = true;
			
				var items = await _mostpopular_MainFeedRss.GetData();
                Mostpopular_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				Mostpopular_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingMostpopular_NewsListControlCollection = false;
			}
		}
    }
}
